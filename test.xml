<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.

// Variables globales
clock x_reception; // Temps pour réceptionner les cartons
clock x_pliage;    // Temps pour plier un carton
clock x_controle;  // Temps pour le contrôle qualité
chan reception;    // Synchronisation pour réception des cartons
chan pliage;       // Synchronisation pour démarrer le pliage
chan fini_pliage;  // Signal de fin de pliage
chan controle;     // Synchronisation pour le contrôle qualité
chan empilage;     // Signal pour empiler les cartons validés
bool carton_valide; // État du carton après contrôle
int[0,10] nb_cartons = 10; // Nombre total de cartons à traiter
</declaration>
	<template>
		<name>Empilage</name>
		<location id="id0" x="-187" y="0">
			<name x="-197" y="-34">EnAttente</name>
		</location>
		<init ref="id0"/>
		<transition id="id1">
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-204" y="-80">nb_cartons&gt;0</label>
			<label kind="synchronisation" x="-204" y="-63">empilage?</label>
			<label kind="assignment" x="-204" y="-46">nb_cartons--</label>
			<nail x="-221" y="-93"/>
			<nail x="-170" y="-93"/>
		</transition>
	</template>
	<template>
		<name>ControleQualite</name>
		<location id="id2" x="-221" y="-25">
			<name x="-231" y="-59">EnAttente</name>
		</location>
		<location id="id3" x="42" y="-25">
			<name x="32" y="-59">Controle</name>
			<label kind="invariant" x="32" y="-8">x_controle &gt;= 5</label>
		</location>
		<init ref="id2"/>
		<transition id="id4">
			<source ref="id3"/>
			<target ref="id3"/>
			<nail x="85" y="-25"/>
		</transition>
		<transition id="id5">
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-75" y="-114">x_controle == 5</label>
			<label kind="synchronisation" x="-75" y="-97">empilage!</label>
			<label kind="assignment" x="-75" y="-80">carton_valide := true</label>
			<nail x="-93" y="-136"/>
		</transition>
		<transition id="id6">
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-203" y="-42">fini_pliage?</label>
			<label kind="assignment" x="-203" y="-25">x_controle := 0</label>
		</transition>
	</template>
	<template>
		<name>Pliage</name>
		<location id="id7" x="-161" y="-8">
			<name x="-171" y="-42">EnAttente</name>
		</location>
		<location id="id8" x="-17" y="-8">
			<name x="-27" y="-42">EnCours</name>
		</location>
		<init ref="id7"/>
		<transition id="id9">
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="guard" x="-67" y="-89">x_pliage == 10</label>
			<label kind="synchronisation" x="-67" y="-72">fini_pliage!</label>
			<nail x="-85" y="-102"/>
		</transition>
		<transition id="id10">
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-143" y="-25">pliage?</label>
			<label kind="assignment" x="-143" y="-8">x_pliage:=0</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Reception</name>
		<declaration>// Place local declarations here.
</declaration>
		<location id="id11" x="-450" y="-8">
			<name x="-460" y="-42">EnAttente</name>
		</location>
		<location id="id12" x="-221" y="-8">
			<name x="-229" y="-51">Recu</name>
			<label kind="invariant" x="-231" y="9">x_reception &lt;= 5</label>
		</location>
		<init ref="id11"/>
		<transition id="id13">
			<source ref="id12"/>
			<target ref="id12"/>
			<nail x="-187" y="-8"/>
		</transition>
		<transition id="id14">
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="guard" x="-322" y="-97">x_reception == 5</label>
			<label kind="synchronisation" x="-322" y="-80">pliage!</label>
			<nail x="-340" y="-119"/>
		</transition>
		<transition id="id15">
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="assignment" x="-432" y="-8">x_reception :=0</label>
		</transition>
	</template>
	<system>// Place template instantiations here.

ReceptionAutomate = Reception();
PliageAutomate = Pliage();
ControleAutomate = ControleQualite();
EmpilageAutomate = Empilage();

// List one or more processes to be composed into a system.
system ReceptionAutomate, PliageAutomate, ControleAutomate, EmpilageAutomate;
</system>
	<queries>
		<query>
			<formula/>
			<comment/>
		</query>
		<query>
			<formula>A[] not deadlock
</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-12-10 14:06:36 +0100">
			</result>
		</query>
	</queries>
</nta>
